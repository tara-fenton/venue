<% include ../partials/header %>
<body>
  <!-- https://beta.developer.spotify.com/documentation/web-playback-sdk/quick-start/# -->
  <!-- https://beta.developer.spotify.com/documentation/web-playback-sdk/reference/#api-spotify-player -->
  <!-- get the spotify player to use to play songs -->
  <script src="https://sdk.scdn.co/spotify-player.js"></script>

  <div class="content">
    <div class="header">
      <h2><%=venueName%> Venue</h2>
      <h2><%=data.name%></h2>
      <a href="<%=data.external_urls.spotify%>" target="_blank"><%= data.external_urls.spotify %></a>
      <form action="/addToPlaylist?venue=<%=venueName%>&trackId=<%=data.id%>" method="post" class="createForm">
        <button class="create">Add to Playlist</button>
      </form>
    </div>
  </div>
  <!-- script to play in browser -->
    <script>
    window.onSpotifyWebPlaybackSDKReady = () => {
  const token = `BQBZkziL2hHFwSZ6Qewa58BLdVJKX3Ev1_HBTrgw5cas14mpTL_fLyggs543OYBlZEg-aXm494t9D4vXbD67DIgd56K1WTKAXa-4ZeiIxLWiyZa4jGE7ju9uW8W3HaFJLWgOU-eMOtjENsw-Thisb_tfwGKk4mawuPTBqQ`;
  const player = new Spotify.Player({
    //name: "Web Playback SDK Quick Start Player",
    name: "Venue Player",
    getOAuthToken: cb => {
      cb(token);
    }
  });
  // Error handling
  player.addListener("initialization_error", ({ message }) => {
    console.error(message);
  });
  player.addListener("authentication_error", ({ message }) => {
    console.error(message);
  });
  player.addListener("account_error", ({ message }) => {
    console.error(message);
  });
  player.addListener("playback_error", ({ message }) => {
    console.error(message);
  });
  // Playback status updates
  player.addListener("player_state_changed", state => {
    console.log(state);
  });
  // Ready
  player.addListener("ready", ({ device_id }) => {
    console.log("Ready with Device ID", device_id);
    // spotify:track:7xGfFoTpQ2E7fRF5lN10tr
    fetch(`https://api.spotify.com/v1/me/player/play?device_id=${device_id}`, {
      method: "PUT",
      body: JSON.stringify({
        uris: [`spotify:track:<%=data.id%>`]
      }),
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`
      }
    });
  });

  // Connect to the player!
  player.connect().then(success => {
    if (success) {
      console.log("The Web Playback SDK successfully connected to Spotify!");
    }
  });
  player.getCurrentState().then(state => {
    if (!state) {
      console.error("User is not playing music through the Web Playback SDK");
      return;
    }

    let { current_track, next_tracks: [next_track] } = state.track_window;

    console.log("Currently Playing", current_track);
    console.log("Playing Next", next_track);
  });
};
</script>
</body>
</html>
